{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jjenn\\\\OneDrive\\\\Documents\\\\CS 307\\\\ScheduleSwift Project\\\\ScheduleSwift\\\\frontEnd\\\\src\\\\pages\\\\Manager\\\\ManagerDashboard\\\\Orders.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Title from './Title';\nimport Axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { Button, TextField, Grid, Typography } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction preventDefault(event) {\n  event.preventDefault();\n}\nexport default function Orders(props) {\n  _s();\n  const [reservations, setReservations] = useState([]);\n  const [deleteRes, setDeleteRes] = useState('');\n  const [error, setError] = useState('');\n  function getReservations(business) {\n    Axios.post(\"http://localhost:3001/api/getBusinessReservations\", {\n      businessName: props.businessName\n    }).then(result => {\n      const allReserves = result.data.result;\n      console.log(allReserves);\n      setReservations(allReserves);\n    });\n  }\n  function deleteReservation(resID) {\n    Axios.post(\"http://localhost:3001/api/managerDeleteReservation\", {\n      reservationID: resID\n    }).then(result => {\n      if (result.data.result.affectedRows == 0) {\n        setError(\"No Reservation with that ID exists\");\n      } else {\n        setError(\"\");\n        getReservations(props.businessName);\n      }\n    });\n  }\n  useEffect(() => {\n    getReservations(props.businessName);\n  }, []);\n  if (reservations.length > 0) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        children: \"Current Active Reservations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Reservation ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Business Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Reservable Item\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Reserved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: reservations.map((reserve, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: reserve.ID\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: reserve.reservationDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: reserve.businessName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: reserve.reservableItem\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: reserve.isReserved\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: `$${reserve.price}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => deleteReservation(reserve.ID),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this)]\n          }, reserve.ID, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Awaiting Response\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Orders, \"3C3IWyc//NtBAsEucDZz0Yg7Aos=\");\n_c = Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","Link","Table","TableBody","TableCell","TableHead","TableRow","Title","Axios","useEffect","useState","Button","TextField","Grid","Typography","preventDefault","event","Orders","props","reservations","setReservations","deleteRes","setDeleteRes","error","setError","getReservations","business","post","businessName","then","result","allReserves","data","console","log","deleteReservation","resID","reservationID","affectedRows","length","map","reserve","index","ID","reservationDate","reservableItem","isReserved","price"],"sources":["C:/Users/jjenn/OneDrive/Documents/CS 307/ScheduleSwift Project/ScheduleSwift/frontEnd/src/pages/Manager/ManagerDashboard/Orders.js"],"sourcesContent":["import * as React from 'react';\r\nimport Link from '@mui/material/Link';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Title from './Title';\r\nimport Axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, TextField, Grid, Typography } from '@mui/material';\r\n\r\nfunction preventDefault(event) {\r\n    event.preventDefault();\r\n}\r\n\r\nexport default function Orders(props) {\r\n    const [reservations, setReservations] = useState([]);\r\n    const [deleteRes, setDeleteRes] = useState('');\r\n    const [error, setError] = useState('');\r\n    function getReservations(business) {\r\n        Axios.post(\"http://localhost:3001/api/getBusinessReservations\", {\r\n            businessName: props.businessName\r\n        }).then((result) => {\r\n            const allReserves = result.data.result;\r\n            console.log(allReserves);\r\n            setReservations(allReserves);\r\n\r\n        })\r\n    }\r\n    function deleteReservation(resID) {\r\n        Axios.post(\"http://localhost:3001/api/managerDeleteReservation\", {\r\n            reservationID: resID\r\n        }).then((result) => {\r\n            if (result.data.result.affectedRows == 0) {\r\n                setError(\"No Reservation with that ID exists\")\r\n            } else {\r\n                setError(\"\");\r\n                getReservations(props.businessName);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getReservations(props.businessName)\r\n    }, []);\r\n    if (reservations.length > 0) {\r\n        return (\r\n            <React.Fragment>\r\n                <Title>Current Active Reservations</Title>\r\n                <Table size=\"small\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell>Reservation ID</TableCell>\r\n                            <TableCell>Date</TableCell>\r\n                            <TableCell>Business Name</TableCell>\r\n                            <TableCell>Reservable Item</TableCell>\r\n                            <TableCell>Reserved</TableCell>\r\n                            <TableCell align=\"right\">Price</TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {reservations.map((reserve, index) => (\r\n                            <TableRow key={reserve.ID}>\r\n                                <TableCell>{reserve.ID}</TableCell>\r\n                                <TableCell>{reserve.reservationDate}</TableCell>\r\n                                <TableCell>{reserve.businessName}</TableCell>\r\n                                <TableCell>{reserve.reservableItem}</TableCell>\r\n                                <TableCell>{reserve.isReserved}</TableCell>\r\n                                <TableCell align=\"right\">{`$${reserve.price}`}</TableCell>\r\n                                <TableCell><Button onClick={() => deleteReservation(reserve.ID)}>Delete</Button></TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </React.Fragment >\r\n        );\r\n    } else {\r\n        return (\r\n            <p>Awaiting Response</p>\r\n        )\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}