{"ast":null,"code":"'use strict';\n\nvar isExisty = function isExisty(value) {\n  return value !== null && value !== undefined;\n};\nvar _isEmpty = function _isEmpty(value) {\n  if (value instanceof Array) {\n    return value.length === 0;\n  }\n  return value === '' || !isExisty(value);\n};\nvar isEmptyTrimed = function isEmptyTrimed(value) {\n  if (typeof value === 'string') {\n    return value.trim() === '';\n  }\n  return true;\n};\nvar validations = {\n  matchRegexp: function matchRegexp(value, regexp) {\n    var validationRegexp = regexp instanceof RegExp ? regexp : new RegExp(regexp);\n    return _isEmpty(value) || validationRegexp.test(value);\n  },\n  // eslint-disable-next-line\n  isEmail: function isEmail(value) {\n    return validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n  },\n  isEmpty: function isEmpty(value) {\n    return _isEmpty(value);\n  },\n  required: function required(value) {\n    return !_isEmpty(value);\n  },\n  trim: function trim(value) {\n    return !isEmptyTrimed(value);\n  },\n  isNumber: function isNumber(value) {\n    return validations.matchRegexp(value, /^-?[0-9]\\d*(\\d+)?$/i);\n  },\n  isFloat: function isFloat(value) {\n    return validations.matchRegexp(value, /^(?:-?[1-9]\\d*|-?0)?(?:\\.\\d+)?$/i);\n  },\n  isPositive: function isPositive(value) {\n    if (isExisty(value)) {\n      return (validations.isNumber(value) || validations.isFloat(value)) && value >= 0;\n    }\n    return true;\n  },\n  maxNumber: function maxNumber(value, max) {\n    return _isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10);\n  },\n  minNumber: function minNumber(value, min) {\n    return _isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10);\n  },\n  maxFloat: function maxFloat(value, max) {\n    return _isEmpty(value) || parseFloat(value) <= parseFloat(max);\n  },\n  minFloat: function minFloat(value, min) {\n    return _isEmpty(value) || parseFloat(value) >= parseFloat(min);\n  },\n  isString: function isString(value) {\n    return _isEmpty(value) || typeof value === 'string' || value instanceof String;\n  },\n  minStringLength: function minStringLength(value, length) {\n    return validations.isString(value) && value.length >= length;\n  },\n  maxStringLength: function maxStringLength(value, length) {\n    return validations.isString(value) && value.length <= length;\n  },\n  // eslint-disable-next-line no-undef\n  isFile: function isFile(value) {\n    return _isEmpty(value) || value instanceof File;\n  },\n  maxFileSize: function maxFileSize(value, max) {\n    return _isEmpty(value) || validations.isFile(value) && value.size <= parseInt(max, 10);\n  },\n  allowedExtensions: function allowedExtensions(value, fileTypes) {\n    return _isEmpty(value) || validations.isFile(value) && fileTypes.split(',').indexOf(value.type) !== -1;\n  }\n};\nmodule.exports = validations;","map":{"version":3,"names":["isExisty","value","undefined","_isEmpty","Array","length","isEmptyTrimed","trim","validations","matchRegexp","regexp","validationRegexp","RegExp","test","isEmail","isEmpty","required","isNumber","isFloat","isPositive","maxNumber","max","parseInt","minNumber","min","maxFloat","parseFloat","minFloat","isString","String","minStringLength","maxStringLength","isFile","File","maxFileSize","size","allowedExtensions","fileTypes","split","indexOf","type","module","exports"],"sources":["C:/Users/jjenn/OneDrive/Documents/CS 307/ScheduleSwift Project/ScheduleSwift/frontEnd/node_modules/react-form-validator-core/lib/ValidationRules.js"],"sourcesContent":["'use strict';\n\nvar isExisty = function isExisty(value) {\n    return value !== null && value !== undefined;\n};\n\nvar _isEmpty = function _isEmpty(value) {\n    if (value instanceof Array) {\n        return value.length === 0;\n    }\n    return value === '' || !isExisty(value);\n};\n\nvar isEmptyTrimed = function isEmptyTrimed(value) {\n    if (typeof value === 'string') {\n        return value.trim() === '';\n    }\n    return true;\n};\n\nvar validations = {\n    matchRegexp: function matchRegexp(value, regexp) {\n        var validationRegexp = regexp instanceof RegExp ? regexp : new RegExp(regexp);\n        return _isEmpty(value) || validationRegexp.test(value);\n    },\n\n    // eslint-disable-next-line\n    isEmail: function isEmail(value) {\n        return validations.matchRegexp(value, /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i);\n    },\n\n    isEmpty: function isEmpty(value) {\n        return _isEmpty(value);\n    },\n\n    required: function required(value) {\n        return !_isEmpty(value);\n    },\n\n    trim: function trim(value) {\n        return !isEmptyTrimed(value);\n    },\n\n    isNumber: function isNumber(value) {\n        return validations.matchRegexp(value, /^-?[0-9]\\d*(\\d+)?$/i);\n    },\n\n    isFloat: function isFloat(value) {\n        return validations.matchRegexp(value, /^(?:-?[1-9]\\d*|-?0)?(?:\\.\\d+)?$/i);\n    },\n\n    isPositive: function isPositive(value) {\n        if (isExisty(value)) {\n            return (validations.isNumber(value) || validations.isFloat(value)) && value >= 0;\n        }\n        return true;\n    },\n\n    maxNumber: function maxNumber(value, max) {\n        return _isEmpty(value) || parseInt(value, 10) <= parseInt(max, 10);\n    },\n\n    minNumber: function minNumber(value, min) {\n        return _isEmpty(value) || parseInt(value, 10) >= parseInt(min, 10);\n    },\n\n    maxFloat: function maxFloat(value, max) {\n        return _isEmpty(value) || parseFloat(value) <= parseFloat(max);\n    },\n\n    minFloat: function minFloat(value, min) {\n        return _isEmpty(value) || parseFloat(value) >= parseFloat(min);\n    },\n\n    isString: function isString(value) {\n        return _isEmpty(value) || typeof value === 'string' || value instanceof String;\n    },\n    minStringLength: function minStringLength(value, length) {\n        return validations.isString(value) && value.length >= length;\n    },\n    maxStringLength: function maxStringLength(value, length) {\n        return validations.isString(value) && value.length <= length;\n    },\n\n    // eslint-disable-next-line no-undef\n    isFile: function isFile(value) {\n        return _isEmpty(value) || value instanceof File;\n    },\n    maxFileSize: function maxFileSize(value, max) {\n        return _isEmpty(value) || validations.isFile(value) && value.size <= parseInt(max, 10);\n    },\n    allowedExtensions: function allowedExtensions(value, fileTypes) {\n        return _isEmpty(value) || validations.isFile(value) && fileTypes.split(',').indexOf(value.type) !== -1;\n    }\n};\n\nmodule.exports = validations;"],"mappings":"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"},"metadata":{},"sourceType":"script"}